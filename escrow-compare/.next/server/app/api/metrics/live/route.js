"use strict";(()=>{var e={};e.id=442,e.ids=[442],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},41808:e=>{e.exports=require("net")},71576:e=>{e.exports=require("string_decoder")},24404:e=>{e.exports=require("tls")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},74517:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>f,requestAsyncStorage:()=>d,routeModule:()=>p,serverHooks:()=>v,staticGenerationAsyncStorage:()=>h});var s={};t.r(s),t.d(s,{GET:()=>u,POST:()=>m});var a=t(49303),o=t(88716),i=t(60670),n=t(87070),c=t(83493),l=t(93475);async function u(e){try{let e="metrics:live",r=await (0,l.se)(e);if(r)return n.NextResponse.json(r);let[t,s,a,o]=await Promise.all([c._.serviceMetric.findMany({distinct:["serviceId"],orderBy:{timestamp:"desc"},take:30,include:{service:{select:{name:!0,slug:!0}}}}),c._.marketData.findFirst({orderBy:{date:"desc"}}),c._.feeCalculation.count({where:{createdAt:{gte:new Date(Date.now()-864e5)}}}),c._.escrowService.findMany({orderBy:{totalVolume:"desc"},take:5,select:{name:!0,slug:!0,totalVolume:!0,marketShare:!0}})]),i=t.length?t.reduce((e,r)=>e+r.responseTime,0)/t.length:18,u=t.length?t.reduce((e,r)=>e+r.uptime,0)/t.length:99.5,m=t.reduce((e,r)=>e+r.activeUsers,0),p={timestamp:new Date().toISOString(),aggregate:{avgResponseTime:Math.round(i+(Math.random()-.5)*2),avgUptime:Math.round(100*u)/100,totalActiveUsers:m+Math.floor(100*Math.random()),activeTransactions:a+Math.floor(50*Math.random()),volume24h:s?.totalVolume||485e5,trend:Math.random()>.5?"up":Math.random()>.5?"down":"stable"},services:t.map(e=>({serviceId:e.serviceId,serviceName:e.service.name,serviceSlug:e.service.slug,responseTime:e.responseTime+Math.floor((Math.random()-.5)*5),uptime:Math.min(100,Math.max(95,e.uptime+(Math.random()-.5)*.5)),activeUsers:e.activeUsers+Math.floor(20*Math.random()),volume:e.volume,successRate:e.successRate,status:e.uptime>99?"operational":e.uptime>95?"degraded":"down"})),topServices:o.map(e=>({name:e.name,slug:e.slug,marketShare:e.marketShare,volume:e.totalVolume})),marketTrends:s?.trends||{cryptoGrowth:15,crossBorderGrowth:12,b2bGrowth:8}};return await (0,l.E6)(e,p,10),n.NextResponse.json(p)}catch(e){return console.error("Error fetching live metrics:",e),n.NextResponse.json({error:"Failed to fetch live metrics"},{status:500})}}async function m(e){return n.NextResponse.json({message:"WebSocket endpoint",instructions:"Connect to wss://escrowcompare.io/api/metrics/live/ws for real-time updates",supported:!1})}let p=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/metrics/live/route",pathname:"/api/metrics/live",filename:"route",bundlePath:"app/api/metrics/live/route"},resolvedPagePath:"/workspace/escrow-compare/app/api/metrics/live/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:d,staticGenerationAsyncStorage:h,serverHooks:v}=p,g="/api/metrics/live/route";function f(){return(0,i.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:h})}},83493:(e,r,t)=>{t.d(r,{_:()=>a});let s=require("@prisma/client"),a=globalThis.prisma??new s.PrismaClient},93475:(e,r,t)=>{t.d(r,{E6:()=>o,se:()=>a});let s=(0,t(79984).createClient)({url:process.env.REDIS_URL||"redis://localhost:6379"});async function a(e){try{let r=await s.get(e);return r?JSON.parse(r):null}catch(r){return console.error(`Error getting cached data for ${e}:`,r),null}}async function o(e,r,t=60){try{await s.setEx(e,t,JSON.stringify(r))}catch(r){console.error(`Error setting cached data for ${e}:`,r)}}s.on("error",e=>console.error("Redis Client Error",e)),s.isOpen||s.connect().catch(console.error)}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[948,972,984],()=>t(74517));module.exports=s})();